plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.johnrengelman.shadow' version '8.1.1' // Shadow JAR 플러그인 추가
}

group = 'dev.gunho'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
//    DB 사용하지 않음
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.mariadb:r2dbc-mariadb'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.mockito:mockito-core'
}


// 프로파일 설정을 위한 리소스 필터링
processResources {
    filesMatching('application.yml') {
        expand([
                'applicationVersion': project.version,
                'applicationName': project.name
        ])
    }
}

// 테스트 설정
tasks.named('test') {
    useJUnitPlatform()
}

// JAR 파일 생성 설정
bootJar {
    archiveBaseName = 'together-api'
    archiveVersion = project.version
    archiveClassifier = ''
}
